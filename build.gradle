plugins {
    id 'java'
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'ca.fxco.gitmergepipeline'
version = '0.1.2-SNAPSHOT'

application {
    mainClass = 'ca.fxco.gitmergepipeline.GitMergePipeline'
}

repositories {
    mavenCentral()
}

dependencies {
    // JGit for Git operations
    implementation 'org.eclipse.jgit:org.eclipse.jgit:7.2.1.202505142326-r'

    // Jackson for JSON configuration
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Apache Commons for utility functions
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.14.0'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-simple:2.0.7'

    // Testing
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

graalvmNative {
    binaries {
        main {
            imageName = "GitMergePipeline"
            mainClass = "ca.fxco.gitmergepipeline.GitMergePipeline"
        }
    }
    binaries.configureEach {
        buildArgs.add("--verbose")
        buildArgs.add("-H:+UnlockExperimentalVMOptions")
        buildArgs.add("-H:IncludeResourceBundles=com.sun.tools.javac.resources.compiler")
        buildArgs.add("-H:IncludeResourceBundles=com.sun.tools.javac.resources.javac")
        buildArgs.add("--no-fallback")
        buildArgs.add("--initialize-at-build-time=com.sun.tools.javac.file.Locations")
        buildArgs.add("-H:+ReportExceptionStackTraces")
        buildArgs.add("-H:-UseContainerSupport")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED")
        buildArgs.add("-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED")
        buildArgs.add("-march=compatibility")
    }
    agent {
        enabled = true
        defaultMode = "standard"
    }
}
